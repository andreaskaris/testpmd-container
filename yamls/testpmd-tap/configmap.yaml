---
apiVersion: v1
kind: ConfigMap
metadata:
  name: testpmd-commands
  namespace: dpdktest
data:
  entrypoint.sh: |
    #!/bin/bash
    
    set -eu

    echo "===================================================="
    echo "Information about current user and privilege status:"
    echo "===================================================="
    capsh --print
    id
    echo "===================================================="
    echo ""
    
    # https://doc.dpdk.org/guides/linux_gsg/linux_eal_parameters.html
    # https://doc.dpdk.org/guides/sample_app_ug/kernel_nic_interface.html
    
    echo "Get PCI_DEVICE_ID from filter expression"
    PCI_DEVICE_FILTER=${PCI_DEVICE_FILTER:-PCIDEVICE_OPENSHIFT_IO}
    PCI_DEVICE_ID=$(env | grep -E "^$PCI_DEVICE_FILTER" | awk -F '=' '{print $NF}' | sort | head -1 | sed 's/,/ /g')

    TAP_INTERFACE=${TAP_INTERFACE:-dp0}
    
    echo "Get MAC ADDRESS"
    MACADDR=$(echo "macaddr 0" | dpdk-ethtool -a $PCI_DEVICE_ID | awk '/Port 0 MAC Address/ {print $NF}'| awk '{print tolower($0)}')
    TAP_MACADDR=$(ip link ls dev $TAP_INTERFACE | grep ether | awk '{print $2}' | awk '{print tolower($0)}')
    if [ "$MACADDR" != "$TAP_MACADDR" ]; then
        echo "Mac addresses of PCI device $PCI_DEVICE_ID and of tap interface $TAP_INTERFACE do not match"
        exit 1
    fi
    
    if [ "$PINNED_LCORES" == "" ]; then
    	echo "Get available CPUs from the Cpus_allowed: list"
    	PINNED_LCORES=$(cat /proc/self/status | awk '/Cpus_allowed_list:/ {print $NF}')
    	echo "Pinned lcores will be: $PINNED_LCORES"
    else
    	echo "Using PINNED_LCORES '$PINNED_LCORES' from configuration"
    fi
    
    echo "Run testpmd and forward everything between dp0 tunnel interface and vfio interface"
    ( while true ; do echo 'show port stats all' ; sleep 60 ; done ) | \
        dpdk-testpmd --log-level=10 --legacy-mem \
        --vdev=virtio_user0,path=/dev/vhost-net,queues=2,queue_size=1024,iface=${TAP_INTERFACE},mac=${MACADDR} \
        -l $PINNED_LCORES -n 4 -a $PCI_DEVICE_ID -- \
        --nb-cores=1 --nb-ports=2  --total-num-mbufs=2048 -i --cmdline-file=/testpmd/commands.txt
      
    echo "FAILURE! If we got here, this means that it's time for troubleshooting. Testpmd did not run or crashed!"
    sleep infinity
  commands.txt: |
    show port info all
    show port stats all
    start
